<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: General Tips | $whois andyregan]]></title>
  <link href="http://andyregan.net/blog/categories/general-tips/atom.xml" rel="self"/>
  <link href="http://andyregan.net/"/>
  <updated>2013-01-09T19:02:45+00:00</updated>
  <id>http://andyregan.net/</id>
  <author>
    <name><![CDATA[Andrew Regan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing DevStack on A Vagrant VM With Bridged Networking]]></title>
    <link href="http://andyregan.net/installing-devstack-on-a-vagrant-vm-with-bridged-networking/"/>
    <updated>2012-10-20T00:00:00+01:00</updated>
    <id>http://andyregan.net/installing-devstack-on-a-vagrant-vm-with-bridged-networking</id>
    <content type="html"><![CDATA[<p>Background: I'm installing <a href="http://devstack.org/">DevStack</a> on an Ubuntu 12.04 VirtualBox image I provisioned with <a href="http://vagrantup.com">Vagrant</a>.</p>

<p>I'm following <a href="https://gist.github.com/2144344">a gist on how to install DevStack</a>, but I hit the following error when I ran stack.sh for the first time.</p>

<p><blockquote><p>Error: either "dev" is duplicate, or "eth0" is a garbage.</p></blockquote></p>

<p>I specified bridged mode in my Vagrantfile, so my <strong>HOST_IP_IFACE</strong> is eth1 not eth0. The work-around was to export the correct
value and re-run the script.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">HOST_IP_IFACE</span><span class="o">=</span>eth1&lt;br/&gt;
</span><span class='line'><span class="nv">$ </span>./stack.sh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flashing Cyanogenmod 7.1 to a Samsung Galaxy S II (GT-I9100)]]></title>
    <link href="http://andyregan.net/flashing-cyanogenmod-7-1-to-a-samsung-galaxy-s-ii-gt-i9100/"/>
    <updated>2011-11-28T00:00:00+00:00</updated>
    <id>http://andyregan.net/flashing-cyanogenmod-7-1-to-a-samsung-galaxy-s-ii-gt-i9100</id>
    <content type="html"><![CDATA[<p><strong>WARNING: These notes are for reference. Doing this will void your warranty and doing this wrong could brick your phone.</strong></p>

<p><img class="center" src="/images/posts/flashing-cyanogenmod-7-1-to-a-samsung-galaxy-s-ii-gt-i9100/cyanogen-logo.png"" width="200" title="cyanogenmod logo" alt="cyanogenmod logo"></p>

<h2>Background</h2>

<p>Taken straight from Wikipedia, <a href="http://en.wikipedia.org/wiki/CyanogenMod">Cyanogenmod</a> is <strong>"an after-market replacement for the firmware of over sixty cell
phones and Internet tablets. Based on the Android mobile computer operating system, it offers features and options not
found in the official firmware distributed by vendors of these devices"</strong>.</p>

<p>The Cyanogenmod wiki and forums are the best references for flashing your phone. I followed the instructions on the
<a href="http://wiki.cyanogenmod.com/wiki/Samsung_Galaxy_S_II:_Full_Update_Guide">Samsung Galaxy S II: Full Update Guide</a>. I won't repeat those instructions here, but I'll point out some extra steps
I needed to take.</p>

<p>It's not emphasized on the wiki, but (I think) you need an external SD card installed in the phone. You can use this to
store the Cyanogenmod and Google Apps Zip files for installation, rather than using the phones internal storage.</p>

<p>Google Apps (Gmail, the App Market, etc) are packaged separately due to licensing restrictions. They're an optional install,
but I followed the instructions on the wiki to install them when I installed Cyanogenmod.</p>

<h2>Installing the ClockworkMod Recovery</h2>

<h3>Download Mode</h3>

<p>To put the phone into download mode, I turned it off and then held down the following buttons:</p>

<ul>
<li>volume-down</li>
<li>home</li>
<li>power</li>
</ul>


<h3>Samsung Firmware</h3>

<p>I initially followed the instructions for Mac OS X (my OS version was OS X 10.6.8). When I connected the phone in Download
Mode via USB to my MacBook Pro and ran the heimdall flash command, I got the following error:</p>

<p><blockquote><p>Failed to detect compatible download-mode device.</p></blockquote></p>

<p>There's a <a href="https://github.com/Benjamin-Dobell/Heimdall/issues/22">closed issue</a> on the Heimdall GitHub project that explains this is caused by <strong>"faulty secondary bootloaders
distributed by Samsung. These bad bootloaders don't adhere to the USB specification and hence OS X is unable to communicate
with them. In order to solve this issue you need to upgrade your bootloaders to newer bootloaders that Samsung have fixed
using Windows or Linux"</strong>.</p>

<p>The solution for me was to install <a href="http://en.wikipedia.org/wiki/Samsung_Kies">Samsung Kies</a> on a Windows host and update to the phone's firmware to the latest
official release from Samsung (I went from Android 2.3.3 to 2.3.5).</p>

<p>The phone was then detected by Heimdall in OS X and I was able to complete the installation of the ClockworkMod Recovery
as per the instructions on the Cyanogenmod wiki.</p>

<h2>Flashing CyanogenMod</h2>

<h3>Boot into the ClockworkMod Recovery</h3>

<p>I turned off the phone and then held down the following buttons:</p>

<ul>
<li>volume-up</li>
<li>home</li>
<li>power</li>
</ul>


<h3>Backup</h3>

<p>It's not a mandatory step, but I performed a back up as per the instructions in the wiki.</p>

<h2>End Result</h2>

<p>After I finished installing the CyanogenMod and Google Apps Zip files, I rebooted the phone. Everything went better than expected!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Specifying GPU Compute Mode At Job Submission with Torque]]></title>
    <link href="http://andyregan.net/specifying-gpu-compute-mode-at-job-submission-with-torque/"/>
    <updated>2011-07-10T00:00:00+01:00</updated>
    <id>http://andyregan.net/specifying-gpu-compute-mode-at-job-submission-with-torque</id>
    <content type="html"><![CDATA[<p>In Torque 2.5.6, 3.0.2 and later, you can specify GPU compute mode and reset GPU ECC error counts at job submission
(provided that you have configured Torque with the <strong>enable-nvidia-gpus</strong> option).</p>

<p>For CUDA 4.0 (Nvidia 270.x drivers), there are four compute modes that can be set on the GPU.</p>

<ol>
<li><strong>Default</strong> : Multiple threads can run on this GPU</li>
<li><strong>Exclusive Thread</strong> : Only one thread in one process can run on this GPU</li>
<li><strong>Prohibited</strong> : No threads are allowed to run on this GPU</li>
<li><strong>Exclusive Process</strong> : Many threads in one process will be able to run on this GPU</li>
</ol>


<p>With Torque, you can now request <strong>Default</strong>, <strong>Exclusive Thread</strong> or <strong>Exclusive Process</strong> compute modes at job
submission time. The mode you specify applies to all the GPUs you request. If you do not specify a compute mode,
then Torque will set the GPUs to <strong>Exclusive Thread</strong>.</p>

<p>For example, to request 1 GPU and with compute mode set to <strong>Exclusive Process</strong> you could define the following resource:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>qsub -l <span class="nv">nodes</span><span class="o">=</span>1:gpus<span class="o">=</span>1:exclusive_process
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>To request 1 GPU with compute mode set to <strong>Exclusive Thread</strong> and reset the ECC error counts on the GPU, you could define the following:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>qsub -l <span class="nv">nodes</span><span class="o">=</span>1:gpus<span class="o">=</span>1:reseterr:exclusive_thread
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The below table shows the various modes and their associated Torque keywords.</p>

<table>
<thead>
<tr>
<th></th>
<th> Compute Mode      </th>
<th> Keyword           </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Default           </td>
<td> shared            </td>
</tr>
<tr>
<td></td>
<td> Exclusive Thread  </td>
<td> exclusive_thread  </td>
</tr>
<tr>
<td></td>
<td> Exclusive Process </td>
<td> exclusive_process </td>
</tr>
</tbody>
</table>


<p>More information is available in <a href="http://www.adaptivecomputing.com/resources/docs/torque/3.7schedulinggpus.php">Section 3.7 of the Torque Documentation</a>.</p>

<p>Al Taufer from Adaptive Computing helpfully explained the reasoning behind the <em>shared</em> keyword in <a href="http://www.supercluster.org/pipermail/torqueusers/2011-June/013079.html">reply to a question I submitted to the Torque Users mailing list</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Libvirt + KVM : Booting From An ISO Image]]></title>
    <link href="http://andyregan.net/libvirt-kvm-booting-from-an-iso-image/"/>
    <updated>2011-06-16T00:00:00+01:00</updated>
    <id>http://andyregan.net/libvirt-kvm-booting-from-an-iso-image</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://libvirt.org/libvirtLogo.png" width="200" title="libvirt logo" ></p>

<p>If you want to boot your domain from a CDROM (for example, if you wish to re-install the OS on the VM),
you can edit its configuration so that it boots from an ISO image on the host.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>host:~# virsh edit name_of_domain
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Within the <strong>os</strong> section, add a <strong>cdrom</strong> device. Make sure that it is placed before other boot devices, such as disks.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;os&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;...
</span><span class='line'>&amp;lt;boot <span class="nv">dev</span><span class="o">=</span><span class="s1">&#39;cdrom&#39;</span>/&amp;gt;
</span><span class='line'>&amp;lt;boot <span class="nv">dev</span><span class="o">=</span><span class="s1">&#39;hd&#39;</span>/&amp;gt;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;/os&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Add an entry for a cdrom device (or edit an existing cdrom device) such that the <strong>type</strong> is <em>file</em> and the <strong>source</strong>
is the path to the ISO image on the host.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;disk <span class="nb">type</span><span class="o">=</span><span class="s1">&#39;file&#39;</span> <span class="nv">device</span><span class="o">=</span><span class="s1">&#39;cdrom&#39;</span>&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;  &amp;lt;source <span class="nv">file</span><span class="o">=</span><span class="s1">&#39;/path/to/install_media.iso&#39;</span>/&amp;gt;
</span><span class='line'>   ...
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;/disk&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Save your changes and then reboot the domain. It should have booted into the ISO image. You can then attach a console
and continue the installation.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>host:~# virt-viewer name_of_domain
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Edit</h2>

<p>I forgot (of course!) that you must undo the above changes after installation. Otherwise, it will continue to boot
into the ISO and not your shiny new OS.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing Git Group Write Errors]]></title>
    <link href="http://andyregan.net/fixing-git-group-write-errors/"/>
    <updated>2011-06-15T00:00:00+01:00</updated>
    <id>http://andyregan.net/fixing-git-group-write-errors</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/posts/fixing-git-group-write-errors/200px-Git-logo.svg_.png" width="200" title="&#34;200px Git logo&#34;" alt="&#34;200px Git logo&#34;"></p>

<h2>The Problem</h2>

<p>When many users are committing to the same git repository, the correct group permissions must be
set. For example, when a user recently tried to commit to a shared git repository, it failed
with the following error:</p>

<p><blockquote><p>fatal: failed to write object</p></blockquote></p>

<p>Looking at the repository's config file on the server, the <strong>sharedRepository</strong> variable was not set.</p>

<h2>The Fix</h2>

<p>First, I fixed the group permissions for the repository (all the users belonged to the same group).</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod -R g+swX /path/to/repository/
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Then, I set the <strong>sharedRepository</strong> variable to <em>true</em>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/repository/
</span><span class='line'><span class="nv">$ </span>git repo-config core.sharedRepository <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>More Info</h2>

<p>More information on this variable can be found in the git-config man page.</p>

<p><blockquote><p>core.sharedRepository<br/><br/>When group (or true), the repository is made shareable between several users in a group (making sure all the files and objects are group-writable). When all (or world or everybody), the<br/><br/>repository will be readable by all users, additionally to being group-shareable. When umask (or false), git will use permissions reported by umask(2). When 0xxx, where 0xxx is an octal<br/><br/>number, files in the repository will have this mode value. 0xxx will override user´s umask value, and thus, users with a safe umask (0077) can use this option. Examples: 0660 is equivalent<br/><br/>to group. 0640 is a repository that is group-readable but not group-writable. See git-init(1). False by default.</p></blockquote></p>
]]></content>
  </entry>
  
</feed>
